###############################################################################
#                          Generated on phpdocker.io                          #
###############################################################################
version: "3.1"
services:
  mailhog:
    image: mailhog/mailhog:latest
    container_name: e-brief-mailhog
    ports:
      - "8081:8025"

  mysql:
    image: mysql:5.7
    container_name: mysql
    working_dir: /application
    volumes:
      - ./:/application
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=e-briefing
      - MYSQL_USER=e-brief-user
      - MYSQL_PASSWORD=secret
    ports:
      - "8082:3306"

  web:
    image: nginx:alpine
    container_name: web
    working_dir: /application
    volumes:
      - ./:/application
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"

  app:
    build:
      context: ./
      dockerfile: Dockerfile.development
    container_name: php-fpm
    working_dir: /application
    volumes:
      - ./:/application
      - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini

  node:
    image: node:9
    container_name: node
    volumes:
      - ./:/application
      - /application/node_modules
    working_dir: /application
    command: sh -c "npm install && npm run watch"

  composer:
    image: composer:1.7
    container_name: composer
    working_dir: /application
    environment:
      SSH_AUTH_SOCK: /ssh-auth.sock
    volumes:
      - ./:/application
      - "$SSH_AUTH_SOCK:/ssh-auth.sock"
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    command: composer install --ignore-platform-reqs --no-scripts

  ionic:
    build: docker/ionic
    container_name: ionic
    working_dir: /opt/ionic
    ports:
      - "8100:8100"
      - "35729:35729"
    volumes:
      - ./clients/ionic-mobile:/opt/ionic
      - /opt/ionic/node_modules
    command: sh -c "npm install && ionic serve --all --address 0.0.0.0"
